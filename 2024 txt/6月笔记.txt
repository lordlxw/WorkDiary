1、交易限额 数据库对吗
GetLilyTradeLimit 方法 没有maxVolume啊

6/6
记录一下踩过的坑
遇到devexpress的一个问题
用dxg:LookUpEdit样式，然后展示的是一个两列的gridcontrol，记得要把
<dxg:LookUpEdit.PopupContentTemplate>
    <ControlTemplate>
        <dxg:GridControl x:Name="PART_GridControl" 
。。。
这里名字改成PART_GridControl 才可以，选中展示
lookupedit 里  DisplayMember="FormattedTarget"这个才是要展示的东西，可以format
在efcore里可以这样处理

** [NotMapped] // 告诉 EFCore 不要将这个属性映射到数据库表的列
 public string FormattedTarget => $"{Company} - {Target}"; // 定义一个格式化后的文本属性

下午又过了一边需求分析
我的工作量感觉减少很多了，不必再去分析交易单子和聊天的对照
只要获取好数据就行

6/7
新建chat_message 表，目前先这样吧
端午假期看看能不能做到聊天记录的捕获。

基本思路
我有多个聊天窗口需要截取气泡里的文字。我有两个后端程序来处理，C#和python。C#来捕获坐标点来告诉python，python截获数据后发给C#，C#再去重插入到数据库内。
难点：
1、多个窗口的数据捕获行不行
2、C#去重怎么去
3、一系列任务是不是要 以中介窗口为单位执行呢。 
4、C#会向python发送一组坐标（不同的聊天窗口）来进行抓取。python应该以组为单位执行复制的任务。

为了控制好并发，确保 Python 在处理一组数据（如 A）时不受其他组数据（如 B）的干扰，你可以考虑以下策略：

任务队列：使用队列数据结构，例如 Python 中的队列（queue.Queue），将 C# 发送的每组数据存储在队列中。Python 在处理数据时，从队列中获取数据，并依次处理。这样可以确保每组数据按照发送的顺序被处理，不会因为并发而产生混乱。

锁机制：在 Python 中使用锁（threading.Lock 或 threading.RLock）来控制对共享资源的访问。当 Python 在处理一组数据时，其他组数据的处理线程会被阻塞，直到当前组数据处理完成并释放锁。

单线程处理：在 Python 中使用单线程来处理数据，确保每次只处理一组数据，避免并发带来的竞态条件和数据错乱问题。这种方式简单直接，但可能会降低处理速度。

异步处理：在 Python 中使用异步编程模型，例如 asyncio 库，可以实现高效的并发处理。你可以将每组数据的处理逻辑封装成异步任务，在处理时不会阻塞其他任务的执行，从而提高整体的处理效率。

6/8-10
整个端午假期做了两件事
1、成功抓取聊天信息了（单个窗体），C#和python双后端。python只负责抓取的动作。
2、跟残疾人出去骑车，是真累啊。。

6/11
这周把聊天窗体看看（基于handycontrol原生的实现），看源码敲出来。

6/13
晚上和残疾人去了sq家给徐老师看病，整体还蛮顺利的

6/14
开发进度感觉有些慢了，有一个问题是Trades更新了，但是K线图却没有更新？
Trades.Insert(0 这里有问题？？
应该改为add？

6/15
高中同学的聚会 还行
德州赢了700，付了510台费，我好像是傻逼。
欢乐本-90后啥的 感觉没啥意思。

6/19
我的捕获消息服务端（通过复制窗口clipboard来处理，轮询）-任务A
然后也要负责别人发来的文字我要发送到窗口上（同样通过clipboard，事件触发）-任务B
这就意味着我都要用到剪贴板，即 我在执行单个任务的时候必须单独占用剪贴板。

当日任务完成：
1、远期键切换
2、发送给审核人员的消息（复议）
3、画面上功能大致都完成了

6/20
任务完成：
1、30S刷新，以防websocket没推的情况

新需求：
新增盈亏分析界面？？
我的想法是：柱状图（每天盈亏、每月盈亏）、最常下单TOP5、盈亏TOP5 
柱形图：两列（盈亏+成交笔数）

两个客户端？？（管理员 和 审核员 ）一个客户端吧， 就是管理员 功能多一个？

6/21
想法：
客户端、服务端（38888端口）
管理端（38889端口）


6/25
新建了管理端
周五要进行演示

需完成的内容：
1、下单、改价、撤单
2、强平单高亮显示（待完成）

6/28
（2030+2045）/5 条记录+30条————卡死
845条聊天遍历的时候就会卡死？——增加刷新周期

还有服务端第一次遍历的时候是不是应该对聊天记录进行去重呢？删除 起始时间到终止时间的所有数据，再赋值？

未作的部分：
1、orderlistviewmodel单例的对服务器端的心跳检测。
